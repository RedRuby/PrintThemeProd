{% assign Role_User = 'general.Role.User' | t %}
{% assign Role_Printer = 'general.Role.Printer' | t %}
{% assign Role_Manager = 'general.Role.Manager' | t %}
{% assign Role_ASM = 'general.Role.ASM' | t %}
{% assign Role_Admin = 'general.Role.Admin' | t %}

{% if customer-account-common-code == 'table-header-code' %}
  <th class="text-center"><span class="th-span">{{ 'customer.orders.order_number' | t }}</span><div class="btn-group printModeExclude"><button type="button" class="name_asc_btn" onclick="updateState({order_by_name: 'ASC', order_by_order_by: '', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-up"></i></button><button type="button" class="name_desc_btn" onclick="updateState({order_by_name: 'DESC', order_by_order_by: '', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-down"></i></button></div></th>
  <th class="text-center"><span class="th-span">Order By</span><div class="btn-group printModeExclude"><button type="button" class="order_by_asc_btn" onclick="updateState({order_by_name: '', order_by_order_by: 'ASC', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-up"></i></button><button type="button" class="order_by_desc_btn" onclick="updateState({order_by_name: '', order_by_order_by: 'DESC', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-down"></i></button></div></th>
  <th class="text-center"><span class="th-span">Payment Code</span><div class="btn-group printModeExclude"><button type="button" class="discount_codes_asc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: 'ASC', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-up"></i></button><button type="button" class="discount_codes_desc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: 'DESC', order_by_date: '', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-down"></i></button></div></th>
  <th class="text-center"><span class="th-span">{{ 'customer.orders.date' | t }}</span><div class="btn-group printModeExclude"><button type="button" class="date_asc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: '', order_by_date: 'ASC', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-up"></i></button><button type="button" class="date_desc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: '', order_by_date: 'DESC', order_by_fulfillment_status: '', page: '1'});"><i class="fa fa-caret-down"></i></button></div></th>
  <th class="text-center"><span class="th-span">{{ 'customer.orders.fulfillment_status' | t }}</span><div class="btn-group printModeExclude"><button type="button" class="fulfillment_status_asc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: 'ASC', page: '1'});"><i class="fa fa-caret-up"></i></button><button type="button" class="fulfillment_status_desc_btn" onclick="updateState({order_by_name: '', order_by_order_by: '', order_by_discount_codes: '', order_by_date: '', order_by_fulfillment_status: 'DESC', page: '1'});"><i class="fa fa-caret-down"></i></button></div></th>
{% endif %}



{% if customer-account-common-code == 'pagination-code' %}

  <div class="grid per_pageContainer">
    <div class="grid__item two-thirds">
      <div id="paginationInit" class="w3-margin-top">

      </div>
    </div>
    <div class="grid__item one-third text-right">
      <label for="per_page" style="display:inline-block;" class="w3-margin-top">Per Page: &nbsp;</label>
      <select id="per_page" class="per_page" style="max-width:60px; display:inline-block;" onchange="updateState({page: '1',per_page: this.value});updatePerPage(this.value);">
        <option selected value='10'>10</option>
        <option {% if customer_per_page == '20' %}selected{% endif %} value='20'>20</option>
        <option {% if customer_per_page == '30' %}selected{% endif %} value='30'>30</option>
        <option {% if customer_per_page == '40' %}selected{% endif %} value='40'>40</option>
        <option {% if customer_per_page == '50' %}selected{% endif %} value='50'>50</option>
      </select>
    </div>
  </div>

{% endif %}



{% if customer-account-common-code == 'per-page-form' %}

  <div class="hide">
    <form target="shop-frame" accept-charset="UTF-8" id="per-page" action="/contact" class="contact-form" method="post">
      <input name="form_type" type="hidden" value="customer">
      <input name="utf8" type="hidden" value="âœ“">
      <input types="hidden" name="contact[email]" value="{{ customer.email }}"/>
      <input id="update-me" types="hidden" name="contact[tags]" value="" />
      <button type="submit">S</button>
    </form>

    <iframe name="shop-frame" width="500" height="500" id="shopFrame" src="" ></iframe>

    <div id="table-style"><style>.date_desc_btn{ color: white !important; }</style></div>

  </div>
{% endif %}



{% comment %}<script>{% endcomment %}



{% if customer-account-common-code == 'init-variables' %}

  var var_start_date = '';
  var var_end_date = '';
  var var_page = '1';
  var var_per_page = (localStorage.per_page_{{ customer.id }} == undefined) ? '10' : localStorage.per_page_{{ customer.id }};
  var var_fulfillment_status = '';
  var var_order_by_name = '';
  var var_order_by_order_by = '';
  var var_order_by_discount_codes = '';
  var var_order_by_date = 'DESC';
  var var_order_by_fulfillment_status = '';
  var var_assigned_printer = '';
  var var_region_tag = '';
  var var_customer_id = '';
  var var_order_status = '';
  
  var order_data = '';

  var query = ''; 
  
  var bemail = '';
  
  var ctags = '{{ customer.tags |join:',' |remove:'PerPage:10' |remove:'PerPage:20' |remove:'PerPage:30' |remove:'PerPage:40' |remove:'PerPage:50' |replace:' ','~' |replace:',',' ' |strip |replace:' ',',' |replace:'~',' ' }}';
  
{% endif %}
  
  
  


{% if customer-account-common-code == 'doc-ready-code' %}

  $('.per_page option:contains('+var_per_page+')').prop('selected','selected');
    
  $(".datepicker").datepicker({
      showAnim: "drop",
      dateFormat: "mm/dd/yy",
      showOtherMonths: true
  });

  $("#filter_order").click(function() {
      var start_date = $("#start_date").val();
      var end_date = $("#end_date").val();
      if (start_date === "" || end_date === "") {
          alert("Please select start and end dates.");
      } else {
        updateState({ start_date: start_date, end_date: end_date, page: '1' });
        $('.clear-filter').removeAttr('disabled').attr('title', 'Clear Date filter.').show();
      }
  });

  $('.clear-filter').click(function(){
      $('#start_date').val('');
      $('#end_date').val('{{'now' | date: '%m/%d/%Y'}}');
      updateState({ start_date: '', end_date: '', page: '1' });
      $(this).prop('disabled', 'disabled').attr('title', '').hide();
  });
{% endif %}




{% if customer-account-common-code == 'fetchOrders-code' %}

    var uri = new YouAreI(document.location.href);
        query = uri.query_get();
    
    
    var_start_date = (query.start_date != undefined) ? query.start_date : '';
    var_end_date = (query.end_date != undefined) ? query.end_date : '';
    var_page = (query.page != undefined) ? query.page : '1';
    var_per_page = (query.per_page != undefined) ? query.per_page : (localStorage.per_page_{{ customer.id }} == undefined) ? '10' : localStorage.per_page_{{ customer.id }};
    var_fulfillment_status = (query.fulfillment_status != undefined) ? query.fulfillment_status : '';
    var_order_by_name = (query.order_by_name != undefined) ? query.order_by_name : '';
	var_order_by_order_by = (query.order_by_order_by != undefined) ? query.order_by_order_by : '';
    var_order_by_discount_codes = (query.order_by_discount_codes != undefined) ? query.order_by_discount_codes : '';
    var_order_by_date = (query.order_by_date != undefined) ? query.order_by_date : '';
    var_order_by_fulfillment_status = (query.order_by_fulfillment_status != undefined) ? query.order_by_fulfillment_status : '';
	var_assigned_printer = (query.assigned_printer != undefined) ? query.assigned_printer : '';
	var_region_tag = (query.region_tag != undefined) ? query.region_tag : '';
    var_customer_id = (query.customer_id != undefined) ? query.customer_id : {% if customer.tags contains Role_User %}'{{ customer.id }}'{% else %}''{% endif %};
	var_order_status = (query.order_status != undefined) ? query.order_status : '';

    freez();
    var data = { cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}" };

    if(var_start_date.length != 0 && var_end_date.length != 0){ data.start_date = var_start_date; data.end_date = var_end_date; setTimeout(function(){ $('#start_date').val(var_start_date); $('#end_date').val(var_end_date); $('.clear-filter').removeAttr('disabled').attr('title', 'Clear date filter.').show(); },500); $('#radio2').removeAttr('disabled').removeAttr('disabled').parent().removeClass('w3-text-grey'); }
    if(var_page.length != 0){ data.page = var_page }
    if(var_per_page.length != 0){ data.per_page = var_per_page; $('.per_page option[value="'+var_per_page+'"]').prop('selected','selected'); }
    if(var_fulfillment_status.length != 0){ data.fulfillment_status = var_fulfillment_status; $('#select_tl option[value="'+var_fulfillment_status+'"]').prop('selected','selected'); }
    if(var_order_by_name.length != 0){ data.order_by_name = var_order_by_name; toggleOrderBtns('name', data.order_by_name); }
	if(var_order_by_order_by.length != 0){ data.order_by_order_by = var_order_by_order_by; toggleOrderBtns('order_by', data.order_by_order_by); }
    if(var_order_by_discount_codes.length != 0){ data.order_by_discount_codes = var_order_by_discount_codes; toggleOrderBtns('discount_codes', data.order_by_discount_codes); }
    if(var_order_by_date.length != 0){ data.order_by_date = var_order_by_date; toggleOrderBtns('date', data.order_by_date); }
    if(var_order_by_fulfillment_status.length != 0){ data.order_by_fulfillment_status = var_order_by_fulfillment_status; toggleOrderBtns('fulfillment_status', data.order_by_fulfillment_status); }
	if(var_assigned_printer.length != 0){ data.assigned_printer = var_assigned_printer; $('#select_tl option[value="'+var_assigned_printer+'"]').prop('selected','selected'); }
	if(var_region_tag.length != 0){ data.region_tag = var_region_tag; $('#select_rg option[value="'+var_region_tag+'"]').prop('selected','selected'); }
	if(var_customer_id.length != 0){ data.customer_id = var_customer_id; $('#select_rg option[value="'+var_customer_id+'"]').prop('selected','selected'); }
	if(var_order_status.length != 0){ data.order_status = var_order_status; $('#select_tl option[value="'+var_order_status+'"]').prop('selected','selected'); }	

	console.log(JSON.stringify(data));

{% endif %}



{% if customer-account-common-code == 'methods' %}

  function updatePerPage(val){
      function addTags(){
        if(val.length != 0)
          $('#per-page #update-me').val(ctags+',PerPage:'+val);
        else
          $('#per-page #update-me').val(ctags);
        localStorage.per_page_{{ customer.id }} = val;
      }
      $.when(
      addTags()
      ).done(function(){ /*$('#per-page').submit();*/ });
  //     $.post('/contact', $('#per-page').serialize());
  }

  function addCommas(nStr){
    nStr += '';
    x = nStr.split('.');
    x1 = x[0];
    x2 = x.length > 1 ? '.' + x[1] : '';
    var rgx = /(\d+)(\d{3})/;
    while (rgx.test(x1)) {
        x1 = x1.replace(rgx, '$1' + ',' + '$2');
    }
    return x1 + x2;
  }

  
  function updateState(param){ //console.log(JSON.stringify(param)); //start_date,end_date,page,per_page,fulfillment_status,order_name,order_by_discount_codes,order_by_date,order_by_fulfillment_status){
    
    data = {  
      {% comment %}
      start_date: (param.start_date != undefined) ? param.start_date : var_start_date, 
      end_date: (param.end_date != undefined) ? param.end_date : var_end_date, 
      page: (param.page != undefined) ? param.page : var_page, 
      per_page: (param.per_page != undefined) ? param.per_page : var_per_page, 
      fulfillment_status: (param.fulfillment_status != undefined) ? param.fulfillment_status : var_fulfillment_status, 
      order_by_name: (param.order_by_name != undefined) ? param.order_by_name : var_order_by_name, 
      order_by_discount_codes: (param.order_by_discount_codes != undefined) ? param.order_by_discount_codes : var_order_by_discount_codes, 
      order_by_date: (param.order_by_date != undefined) ? param.order_by_date : var_order_by_date, 
      order_by_fulfillment_status: (param.order_by_fulfillment_status != undefined) ? param.order_by_fulfillment_status : var_order_by_fulfillment_status 
      {% endcomment %}
    };
                              
    if(param.start_date != undefined)data.start_date = param.start_date; else if(var_start_date.length != 0)data.start_date = var_start_date;
    if(param.end_date != undefined)data.end_date = param.end_date; else if(var_end_date.length != 0)data.end_date = var_end_date;
    if(param.page != undefined)data.page = param.page; else if(var_page.length != 0)data.page = var_page;
    if(param.per_page != undefined)data.per_page = param.per_page; else if(var_per_page.length != 0)data.per_page = var_per_page;
    if(param.fulfillment_status != undefined)data.fulfillment_status = param.fulfillment_status; else if(var_fulfillment_status.length != 0)data.fulfillment_status = var_fulfillment_status;
    if(param.order_by_name != undefined)data.order_by_name = param.order_by_name; else if(var_order_by_name.length != 0)data.order_by_name = var_order_by_name;
    if(param.order_by_order_by != undefined)data.order_by_order_by = param.order_by_order_by; else if(var_order_by_order_by.length != 0)data.order_by_order_by = var_order_by_order_by;
    if(param.order_by_discount_codes != undefined)data.order_by_discount_codes = param.order_by_discount_codes; else if(var_order_by_discount_codes.length != 0)data.order_by_discount_codes = var_order_by_discount_codes;
    if(param.order_by_date != undefined)data.order_by_date = param.order_by_date; else if(var_order_by_date.length != 0)data.order_by_date = var_order_by_date;
    if(param.order_by_fulfillment_status != undefined)data.order_by_fulfillment_status = param.order_by_fulfillment_status; else if(var_order_by_fulfillment_status.length != 0)data.order_by_fulfillment_status = var_order_by_fulfillment_status;
    if(param.assigned_printer != undefined)data.assigned_printer = param.assigned_printer; else if(var_assigned_printer.length != 0)data.assigned_printer = var_assigned_printer;
    if(param.region_tag != undefined)data.region_tag = param.region_tag; else if(var_region_tag.length != 0)data.region_tag = var_region_tag;
    if(param.customer_id != undefined)data.customer_id = param.customer_id; else if(var_customer_id.length != 0)data.customer_id = var_customer_id;
    if(param.order_status != undefined)data.order_status = param.order_status; else if(var_order_status.length != 0)data.order_status = var_order_status;

    
//     console.log(JSON.stringify(data))
    data = removeEmpty(data);
//     console.log(JSON.stringify(data))
    
    if(document.location.href == History.getState().url && false){
      History.replaceState({ url: document.location.href }, document.title, '?'+History.getState().url.split('?')[1]||'');
    }else{
      summary_view_param = {% if template == 'customers/account.summary-list' %}'view=summary-list&'{% else %}''{% endif %};
      History.pushState({ url: document.location.href }, document.title, ($.param(data).length != 0) ? '?' +summary_view_param +$.param(data) : '' +summary_view_param );
    }
    fetch_Orders(); 
  }
  
  function toggleOrderBtns(btn , data){ console.log('called-for:', data)
    $('#table-style').html('');
    switch(btn){
      case 'name': if(data == 'ASC') $('#table-style').append('<style>.name_asc_btn{ color: white !important; }</style>'); else $('#table-style').append('<style>.name_desc_btn{ color: white !important; }</style>'); console.log('called-for:', btn); break;
      case 'order_by': if(data == 'ASC') $('#table-style').append('<style>.order_by_asc_btn{ color: white !important; }</style>'); else $('#table-style').append('<style>.order_by_desc_btn{ color: white !important; }</style>'); console.log('called-for:', btn); break;
      case 'discount_codes': if(data == 'ASC') $('#table-style').append('<style>.discount_codes_asc_btn{ color: white !important; }</style>'); else $('#table-style').append('<style>.discount_codes_desc_btn{ color: white !important; }</style>'); console.log('called-for:', btn); break;
      case 'date': if(data == 'ASC') $('#table-style').append('<style>.date_asc_btn{ color: white !important; }</style>'); else $('#table-style').append('<style>.date_desc_btn{ color: white !important; }</style>'); console.log('called-for:', btn); break;
      case 'fulfillment_status': if(data == 'ASC') $('#table-style').append('<style>.fulfillment_status_asc_btn{ color: white !important; }</style>'); else $('#table-style').append('<style>.fulfillment_status_desc_btn{ color: white !important; }</style>'); console.log('called-for:', btn); break;
    }
  }
  
  const removeEmpty = (obj) => {
    Object.keys(obj).forEach(k =>
      (obj[k] && typeof obj[k] === 'object') && removeEmpty(obj[k]) ||
      (!obj[k] && obj[k] !== undefined) && delete obj[k]
    );
    return obj;
  };

  function calcT(data) {
    var i;
    var x;
    var str;
    var res;
    var date;
    var total = 0;
    var myArray = data["orders"]; 
    
    order_data = data;
    
    {% if template == 'customers/account' %}
      for (i = 0; i < myArray.length; i++) {
          str = myArray[i]["total"];
  //       	date = myArray[i]["date_unix"].split("T");
  //       	myArray[i]["order_date"] = dateFormat(new Date(date[0]), "mmmm dd, yyyy");
          if(myArray[i]["fulfillment_status"] === "fulfilled"){data["orders"][i]["other_status"] = "unfulfilled";}
          else{data["orders"][i]["other_status"] = "fulfilled";}

          if(data["orders"][i]["cancel_status"].length > 0) data["orders"][i]["order_status"] = "cancelled";
          else data["orders"][i]["order_status"] = data["orders"][i]["fulfillment_status"];

          res = (str.replace(/,/g, "")).replace(/\$/g, "");
          total += Number(res);
      }
    {% endif %}
    
    data["grand_total"] = addCommas(total.toFixed(2));
    
    var ttl_itms = data["total_entries"];
    if(ttl_itms > 0){
    $('#paginationInit').pagination({
        items: ttl_itms,
        itemsOnPage: data["per_page"],
        hrefTextPrefix: "javascript:updateState({ page: '",
        hrefTextSuffix: "'});",
      	currentPage: var_page,
        prevText:'<i class="fa fa-arrow-left"></i>',
        nextText:'<i class="fa fa-arrow-right"></i>',
      	listStyle: 'w3-pagination',
      	ellipsePageSet: false,
//         cssStyle: 'light-theme'
    });
    
      $("#order-none").hide();
      $("#id02, .per_pageContainer, #order-list").show();
    }else{
      $("#id02, .per_pageContainer").hide();
      $("#order-none").show();
    }
  }

{% endif %}





{% comment %}</script>{% endcomment %}