<div id="order-list" style1="display:none;">
    <div class="w3-row printModeExclude">
      <div class="w3-col m2">
        <small class="nbsp-hide"><label for=""><small class="nbsp-hide placeholdLoader">Date Filter</small></label></small>
        <input id="start_date" value="{{first_order}}" readonly class="datepicker placeholdLoader" type="text" name="start_date" placeholder="Start Date" >
      </div>
      <div class="w3-col m2 w3-row-padding" styles="position:relative;">
        <small class="nbsp-hide"><label for="">&nbsp;</label></small>
        <input id="end_date" value="{{'now' | date: '%m/%d/%Y'}}" readonly class="datepicker placeholdLoader" type="text" name="end_date" placeholder="End Date" >
        <button type="button" disabled class="btn btn--secondary w3-padding-01 w3-padding-top1 w3-padding-bottom1 w3-border-black w3-small clear-filter hide1 placeholdLoader" disabled1 style="position:absolute; bottom: 22.75px; right:15px; z-index:; display:none; padding:0 5px; font-size:3px;"><i class="fa fa-times"></i></button>
      </div>
      <div class="w3-col m2">
        <small class="nbsp-hide"><label for="">&nbsp;</label></small>
        {% comment %}<button id="" class="btn--secondary btn--full1 clear-filter placeholdLoader" type="button" style="display:none;" >Clear</button>{% endcomment %}
        <button id="filter_order" class="btn--secondary btn--full1 placeholdLoader" type="button" >Filter Dates</button>
      </div>
      <div class="w3-col m2">
        {% include 'customer-account-common-code' with 'order-search-bar' %}
      </div>
      <div id="td_select" class="w3-col m2 w3-row-padding">
        <small><label for="select_tml"><small class="placeholdLoader"><br class="br-hide">Filter By Team Members</small></label></small>
        <select id="select_tml" onchange="changeUser(this.value); this.title = this.options[this.selectedIndex].innerHTML;" title="" class="assign-printer placeholdLoader" order_id="{% raw %}{{id}}{% endraw %}" status="{% raw %}{{fulfillment_status}}{% endraw %}">
            <option value="" selected>All</option>
            <option value="{{ customer.id }}">My Orders</option>
            <option w3-repeat="customers" value="{% raw %}{{id}}{% endraw %}" title="{% raw %}{{first_name}} {{last_name}}{% endraw %}" select="{% raw %}{{selected}}{% endraw %}">{% raw %}{{email}}{% endraw %}</option>
          </select>
      </div>
        <div id="td_select" class="w3-col m2">
          <small><label for="select_tl"><small class="placeholdLoader"><br class="br-hide">Additional Filters</small></label></small>
          <select id="select_tl" onchange="params={page: '1', order_status: '', assigned_designer: ''}; params[$(this).find('option:selected').attr('filter_attr')]=this.value; updateState(params);" name="order_status" class="placeholdLoader">
            <option value="" selected>Clear Additional Filters</option>
            {% include 'customer-account-common-code' with 'order-status-option-code-fs' %}
          </select>
      </div>
    </div>
  <table id="id02" class="responsive-table w3-table w3-bordered w3-striped1">
    <thead>
      <tr class="w3-text-white" style="background-color: {{ settings.color_topbar_bg }}">
        {% include 'customer-account-common-code' with 'table-header-code-fs' %}
        <th class="text-center printModeExclude placeholdLoader">Estimate Approval<small class="w3-tiny"><br>(Click on order # to see order details)</small></th>
      </tr>
    </thead>
    <tr class="w3-hover-light-grey" w3-repeat="orders">
      <th class="w3-text-orange1 orders text-center" id="{% raw %}{{id}}{% endraw %}"><a class="{% raw %}{{cancel_status}}{% endraw %} placeholdLoader" href="/pages/order?id={% raw %}{{id}}{% endraw %}"><b>{% raw %}{{order_name}}{% endraw %}</b></a></th>
      <td class="text-center"><div class="placeholdLoader">{% raw %}{{company}}{% endraw %}</div></td>
      <td class="text-center" title="{% raw %}{{customer_last_email}}{% endraw %}"><div class="placeholdLoader">{% raw %}{{customer_first_name}} {{customer_last_name}}{% endraw %}</div></td>
      <td class="text-center"><div class="placeholdLoader">${% raw %}{{spend}}{% endraw %}</div></td>
      <td class="text-center"><div class="placeholdLoader">{% raw %}{{discount_codes}}{% endraw %}</div></td>
      <td class="text-center"><div class="placeholdLoader">{% raw %}{{order_date}}{% endraw %}</div></td>
      {% comment %}<td>{% raw %}{{payment_status}}{% endraw %}</td>{% endcomment %}
      {% comment %}<td class="text-right">${% raw %}{{total}}{% endraw %}</td>{% endcomment %}
      <td class="text-center" order_status="{% raw %}{{order_status}}{% endraw %}"><div class="placeholdLoader">{% raw %}{{order_status}}{% endraw %}</div></td>
      <td class="text-center printModeExclude" style="width: 275px;">
        <button class="js-toggle-update-modal1 approveBtn btn--secondary min-width-110 placeholdLoader" disabled style="" title="Update this order" status="{% raw %}{{order_status}}{% endraw %}" status2="{% raw %}{{cancel_status}}{% endraw %}" onclick="if(confirm('Click \'OK\' to approve estimate on order \'{% raw %}{{order_name}}{% endraw %}\'.') == true){ approveOrder({% raw %}{{id}}{% endraw %}); }" order_name="{% raw %}{{order_name}}{% endraw %}" order_id="{% raw %}{{id}}{% endraw %}">Approve</button>
        <span>&nbsp</span>
        <button class="js-toggle-update-modal1 cancelBtn btn--secondary min-width-110 placeholdLoader" style="" title="Cancel this order" status="{% raw %}{{order_status}}{% endraw %}" status2="{% raw %}{{cancel_status}}{% endraw %}" disabled onclick="showCancelModal({% raw %}{{id}}{% endraw %}, '{% raw %}{{ order_name }}{% endraw %}');" order_id="{% raw %}{{id}}{% endraw %}">Reject</button>
      </td>
    </tr>
  </table>
    
  {% include 'customer-account-common-code' with 'pagination-code' %}
    
</div>

{% include 'customer-account-common-code' with 'per-page-form' %}

<div id="mfp-order-cancel">
  {% include 'magnificPopup-orderFS-Cancel' %}
</div>

<script>
  var all_customer = '';

  {% include 'customer-account-common-code' with 'init-variables-fs' %}
  
//   fetch_Orders('','','','');
//   setTimeout(fetch_TeamUsers(),0);
//   setTimeout(fetch_AllUsers(),0);
//   $("#id02, #paginationInit, #order-list").show();
  
  $(document).ready(function() {
    
    fetch_Orders();
  
    {% include 'customer-account-common-code' with 'doc-ready-code' %}
    
    // setTimeout(fetch_AllUsers, 500);
    setTimeout(fetch_TeamUsers, 800);
    
    
  });
  
  
  {% include 'customer-account-common-code' with 'methods-fs' %}
  
  
  function fetch_Orders(){ //start_date, end_date, page, cid
//     var1 = start_date;
//     var2 = end_date;
//     var3 = page;
//     var4 = cid;
//     freez();
//     var data = { cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}" };
                
//     if(start_date.length != 0 && end_date.length != 0){ data.start_date = start_date; data.end_date = end_date; $('#radio2').removeAttr('disabled').parent().removeClass('w3-text-grey'); }
//     if(page.length != 0){ data.page = page }
//     if(cid.length != 0){ data.customer_id = cid }
  
     {% include 'customer-account-common-code' with 'fetchOrders-code-fs' %}
     defreez(); defreez(); $('.placeholdLoader1').addClass('placeholdLoader').removeClass('placeholdLoader1');
     $('.table-wrapper').addClass('overflow-hidden');

     $.ajax({
          url: '/apps/pepsi-print/fs_collection_response/get_orders_list.json',
          type: 'GET',
          data: data,
          dataType: 'json',
          success: function(data){
              // console.log(JSON.stringify(data)); 
              if(data["total_entries"] > 0){
                  calcT(data); //, start_date, end_date, page, cid);
                  
                  $.when(setTimeout(w3DisplayData("id02", data),100))
                  .done(function(){ delete query.per_page;
                    if($.param(query).length > 0)
                      $('a[href^="/pages/order?id="]').each(function(index, item){
                        $(item).attr('href',$(item).attr('href')+'&'+$.param(query));
                      });
                  });
                  
                  $("#print-btn").removeAttr('disabled').prop('title', '').css('cursor', 'default');
                  $('.approveBtn[status="Needs Est. Approval"]').toggleClass('btn--secondary btn-primary btn').prop('disabled', false);
                  $('.approveBtn:not([status="Needs Est. Approval"])').prop('disabled', true).text('Approved').attr('title', '');     
                  $('.cancelBtn[status="Needs Est. Approval"]').prop('disabled', false);             
                  $('.cancelBtn:not([status="Needs Est. Approval"])').prop('disabled', true).attr('title', '');
              }else{
                  $("#id02, .per_pageContainer").hide();
                  $("#order-none, #order-list").show();
                  $("#print-btn").prop('disabled','disabled').prop('title', 'No orders to print.').css('cursor', 'not-allowed');
                  defreez();
                }
              defreez();
              $('.placeholdLoader').addClass('placeholdLoader1').removeClass('placeholdLoader');
              $('.table-wrapper').removeClass('overflow-hidden');
                
          },
          error: function(){
            defreez(); show_message2('Error in fetching Orders.',false);
          }
          
    });
    
  }

  function ftu(data) {
    if(data.status == 'ok' && data.customers != undefined && data.customers.length > 0){
                 
      $.when(w3DisplayData('select_tml', data)).done(
      w3DisplayData('selected_team', data)
      ).done(setTimeout(afterDisplay,1000));
      function afterDisplay(){
        $('#selected_team').show();
        $select_team = $('#select_team select'); console.log($select_team.html());
        $select_team.find("option").removeAttr('disabled'); //console.log($('#select_tml').html());
        {% comment %}
        $('#select_tml option').each(function(index, item){
          if(index > 1){
            $val = $(item).attr('value'); //console.log($val+','+JSON.stringify(item)+','+index);
            $select_team.find("option[value = "+$val+"]").prop('disabled', 'disabled');
          }
        }); //console.log('team fetched');
        {% endcomment %}
        if(Boolean(var_customer_id))
          $('#select_tml').val(var_customer_id);
      }
    }
    else{
      $('#selected_team, #select_tml option:eq(2)').hide();
      $('#select_team select option').removeAttr('disabled');
      $('#selected_team').html('');
    }
    defreez();
  }

  function ExpandSelect(select, maxOptionsVisible){
    
    if (typeof maxOptionsVisible == "undefined") {
            maxOptionsVisible = 20;
    }
    if (typeof select == "string") {
            select = document.getElementById(select);
    }
    if (typeof window["ExpandSelect_tempID"] == "undefined") {
            window["ExpandSelect_tempID"] = 0;
    }
    window["ExpandSelect_tempID"]++;

    var rects = select.getClientRects();

    // ie: cannot populate options using innerHTML.
    function PopulateOptions(select, select2)
    {
      select2.options.length = 0; // clear out existing items
      for (var i = 0; i < select.options.length; i++) {
              var d = select.options[i];
              select2.options.add(new Option(d.text, i))
      }
    }

    var select2 = document.createElement("SELECT");
    //select2.innerHTML = select.innerHTML;
    PopulateOptions(select, select2);
    select2.style.cssText = "visibility: hidden;";
    if (select.style.width) {
            select2.style.width = select.style.width;
    }
    if (select.style.height) {
            select2.style.height = select.style.height;
    }
    select2.id = "ExpandSelect_" + window.ExpandSelect_tempID;

    select.parentNode.insertBefore(select2, select.nextSibling);
    select = select.parentNode.removeChild(select);

    if (select.length > maxOptionsVisible) {
            select.size = maxOptionsVisible;
    } else {
            select.size = select.length;
    }

    if ("pageXOffset" in window) {
            var scrollLeft = window.pageXOffset;
            var scrollTop = window.pageYOffset;
    } else {
            // ie <= 8
            // Function taken from here: http://help.dottoro.com/ljafodvj.php
            function GetZoomFactor()
            {
                    var factor = 1;
                    if (document.body.getBoundingClientRect) {
                            var rect = document.body.getBoundingClientRect ();
                            var physicalW = rect.right - rect.left;
                            var logicalW = document.body.offsetWidth;
                            factor = Math.round ((physicalW / logicalW) * 100) / 100;
                    }
                    return factor;
            }
            var zoomFactor = GetZoomFactor();
            var scrollLeft = Math.round(document.documentElement.scrollLeft / zoomFactor);
            var scrollTop = Math.round(document.documentElement.scrollTop / zoomFactor);
    }

    select.style.position = "absolute";
    select.style.left = (rects[0].left + scrollLeft) + "px";
    select.style.top = (rects[0].top + scrollTop) + "px";
    select.style.zIndex = "1000000";

    var keydownFunc = function(e){
            e = e ? e : window.event;
            // Need to implement hiding select on "Escape" and "Enter".
            if (e.altKey || e.ctrlKey || e.shiftKey || e.metaKey) {
                    return 1;
            }
            // Escape, Enter.
            if (27 == e.keyCode || 13 == e.keyCode) {
                    select.blur();
                    return 0;
            }
            return 1;
    };

    if (select.addEventListener) {
            select.addEventListener("keydown", keydownFunc, false);
    } else {
            select.attachEvent("onkeydown", keydownFunc);
    }

    var tempID = window["ExpandSelect_tempID"];

    var clickFunc = function(e){
            e = e ? e : window.event;
            if (e.target) {
                    if (e.target.tagName == "OPTION") {
                            select.blur();
                    }
            } else {
                    // IE case.
                    if (e.srcElement.tagName == "SELECT" || e.srcElement.tagName == "OPTION") {
                            select.blur();
                    }
            }
    };

    if (select.addEventListener) {
            select.addEventListener("click", clickFunc, false);
    } else {
            select.attachEvent("onclick", clickFunc);
    }

    var blurFunc = function(){
            if (select.removeEventListener) {
                    select.removeEventListener("blur", arguments.callee, false);
                    select.removeEventListener("click", clickFunc, false);
                    select.removeEventListener("keydown", keydownFunc, false);
            } else {
                    select.detachEvent("onblur", arguments.callee);
                    select.detachEvent("onclick", clickFunc);
                    select.detachEvent("onkeydown", keydownFunc);
            }
            select.size = 1;
            select.style.position = "static";
            select = select.parentNode.removeChild(select);
            var select2 = document.getElementById("ExpandSelect_"+tempID);
            select2.parentNode.insertBefore(select, select2);
            select2.parentNode.removeChild(select2);

    };

    if (select.addEventListener) {
            select.addEventListener("blur", blurFunc, false);
    } else {
            select.attachEvent("onblur", blurFunc);
    }

    document.body.appendChild(select);
    select.focus();
  }
  
  function fetch_TeamUsers(state){
      var i = 0;
      $.ajax({
          url: '/apps/pepsi-print/fs_collection_response/get_customers_list.json',
          type: 'GET',
          data: { cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}" },
          dataType: 'json',
          success: function (data) { //console.log(JSON.stringify(data));
                  
                    ftu(data);

          },
          error: function(){
            defreez(); show_message2('Error in fetching TeamList.',false);
          }

      });
  }
  
  function fetch_AllUsers(){
      var i = 0;
      $.ajax({
          url: '/apps/pepsi-print/fs_collection_response/get_all_customers_list.json',
          type: 'GET',
          data: { cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}" },
          dataType: 'json',
          success: function (data) { //console.log(JSON.stringify(data));
                  all_customer = data;
                  $.when(w3DisplayData('select_team', data)).done(
                    setTimeout(function() {
                      $("#select_team option").removeAttr("style").filter(":not([channel_manager~='channel_manager'])").each(function(index, item){
                          $(item).prop('disabled', 'disabled');
                      });
                      $('.fau-refresh').hide();
                      // $("#select_team select").click();
                      ExpandSelect($("#select_team select").prop('disabled', false).focus());
                    }, 1000)
                  );

                  // ftu({customers: data.customers.filter(function(x){ return x.channel_manager == "{{ customer.id }}" }), status: "ok"})

                  defreez();

          },
          error: function(){
            defreez(); show_message2('Error in fetching Users.',false);
          }

      });
  }
  
  function changeUser(val){
      //console.log($this.attr('order_id')+" changed to"+$this.val());
      $('#start_date').val('');
      $('#end_date').val('{{'now' | date: '%m/%d/%Y'}}');
      $('#radio2').prop('disabled', 'disabled').parent().addClass('w3-text-grey');
      updateState({ page: '1', customer_id: val });

    
   }
  
  function editTeam(obj,status){
    freez();
    if(status){
      url = '/apps/pepsi-print/fs_customer/assign_manager_to_site_user.json';
      cid = $(obj).val();
    }
    else{
      url = '/apps/pepsi-print/fs_customer/remove_manager_from_site_user.json';
      cid = $(obj).attr('value');
    }
    
    //     console.log(cid);

    if(!Boolean(cid)){ defreez(); return false; }
    
    {% comment %}{% endcomment %}
    $.ajax({
          url: url,
          type: 'POST',
          data: JSON.stringify({ cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}", customer_id: cid }),
          dataType: 'json',
          contentType: "application/json;",
          statusCode: {
            401:function() { console.log("401"); },
            404:function() { console.log("404"); },
            200:function() { console.log("200"); },
            201:function() { console.log("201"); },
            202:function() { console.log("202"); }
          },
          success: function(data){
//              console.log(JSON.stringify(data));
              
                if(200 == Number(data.status)){
//                    fetch_TeamUsers();
//                     setTimeout(fetch_TeamUsers,2000);
                  
                  if(var_customer_id == cid)
                    updateState({customer_id: ''});
                    
                    //defreez(); 
                  setTimeout(function(){
                    if(status){
                      $('#select_team option[value="'+cid+'"]').attr({'disabled':'disabled', "channel_manager":"{{ customer.id }}"});
                      $('#select_team select option:eq(0)').prop('selected','selected');
                      $('#selected_team').append('<span class="btn--secondary btn-custom" style="margin:5px;" w3-repeat="customers" title="Brandon Pullen">'+$('#select_team option[value="'+cid+'"]').text()+'&nbsp;&nbsp;<a style="color:white;" href="javascript:void(0);" value="'+cid+'" onclick="editTeam(this,false);"><i class="fa fa-times" title="Remove '+$('#select_team option[value="'+cid+'"]').attr('title')+'"></i></a></span>');
                      $('#select_tml').append('<option value="'+cid+'" w3-repeat="customers" title="'+$(obj).attr('title')+'" select="{{selected}}">'+$('#select_team option[value="'+cid+'"]').text()+'</option>');
                      $('#selected_team').show();
                      show_message2('Added Successfully.',true);
                    }else{
                      $('#select_team option[value="'+cid+'"]').removeAttr('disabled').attr("channel_manager","{% raw %}{{ channel_manager }}{% endraw %}");
                      $('#select_tml option[value="'+cid+'"]').remove();
                      $(obj).parent().remove();
                      show_message2('Removed Successfully.',true);
                      if($('#selected_team a').length == 0)
                        $('#selected_team').hide();
                    }
                  },100);
                    
                }else if(401 === Number(data.status)){
                  show_message2(data.message||'Some Error Occured.',false);
                }else{
                  show_message2(data.message||'Some Error Occured.',false); console.log('else');
                }
           
            
              
          },
          error: function(data){
            show_message4(data.responseJSON.message||'Some Error Occured.', false, false);
            $('#select_team option').first().prop('selected', true);
          }
          
   });
  
    
   }

   function approveOrder(order_id) {
    freez();
    $.ajax({
          url: '/apps/pepsi-print/fs_printer_configuration/assign_nsm_to_order.json',
          type: 'POST',
          data: { cemail: "{{ customer.email }}", cid: {{ customer.id }}, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}", order: order_id, cregion: '{{ customer_region_tag |replace:'Region:','' |replace:'0','o'}}', crole: '{{ customer_role_tag |remove:'Role:'}}' },
          dataType: 'json',
          success: function(data){   
            console.log(data);
            show_message2( "Order Approved Successfully.", true);
            window['status_changed_'+order_id] = true;
            setTimeout(function() {
              $('.approveBtn[order_id="'+order_id+'"]').text("Approved").toggleClass('btn--secondary btn-primary btn').parents('td').find('button').prop('disabled', true).attr('title', '').end().prev().text('Est. Approved').attr('order_status', 'Est. Approved');
            }, 100);
          },
          error: function(data){ console.log(data); show_message2(data.responseJSON.message||'Some Error Occured.',false); }
    });
  }
  
  {% include 'customer-account-common-code' with 'reorder-method' %}
</script>
