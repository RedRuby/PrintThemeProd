
<style>
  .hidden{display:none;}
  .mfp-content{width:80% !important; margin-top:40px; margin-bottom:40px;}
</style>

{% if collection.products.size > 0 %}

  {% paginate collection.products by 20 %}

  <div id="CollectionSection" data-section-id="{{ section.id }}" data-section-type="collection-template" data-sort-enabled="{{ section.settings.sort_enable }}" data-tags-enabled="{{ section.settings.tags_enable }}">
    <div class="section-header section-header--breadcrumb">
      {% include 'breadcrumb' with customer_region_tag %}
    </div>

    <header class="section-header section-header--large">
      <h1 style="text-transform:capitalize;" class="section-header__title{% if section.settings.tags_enable or section.settings.sort_enable %} section-header__title--left{% endif %}">{{ collection.title |remove:'Region:NorthEast' |remove:'Region:SouthEast' |remove:'Region:Mountain' |remove:'Region:California' |remove:'Region:Chicago' |remove:'Region:MN' |replace:'-',' ' }}</h1>
      <div class="section-header__link--left">
        <button id="bulk_action" disabled type="button" class="btn">CONFIRM PRODUCT SELECTION(S)</button>
      </div>
      {% if section.settings.tags_enable or section.settings.sort_enable %}
      <div class="section-header__link--right">
        {% if section.settings.tags_enable %}
          {% comment %}{% include 'collection-tags' %}{% endcomment %}
        {% endif %}
        {% if section.settings.sort_enable %}
          {% include 'collection-sorting' %}
        {% endif %}
      </div>
      {% endif %}
    </header>



    <div class="grid-uniform grid-link__container">
      {% assign grid_item_width = 'wide--one-fifth large--one-quarter medium-down--one-half' %}

      {% for product in collection.products %}
        {% assign featured = product %}
        <div class="grid__item {{grid_item_width}}">
          {% include 'product-grid-item-temp-app' %}
        </div>

      {% endfor %}

    </div>

    {% if paginate.pages > 1 %}
      <hr class="hr--clear">

      <div class="text-center">
        {% include 'pagination-custom' %}
      </div>
    {% endif %}
  </div>
	
  <script>product_count = {{ collection.products.size }}; console.log(product_count);</script>

  {% endpaginate %}

{% else %}
	<div class="grid__item">
      <div class="helper-section">
        <h1>No Products...</h1>
        <div class="grid-uniform helper-content{% if section.settings.center_grid_link %} text-center{% endif %}">
          {% for i in (1..4) %}
            <div class="grid__item one-half post-large--one-quarter">
                <span class="grid-link__image grid-link__image--product">
                  <span class="grid-link__image-centered">
                    {% capture current %}{% cycle 1, 2, 3, 4, 5, 6 %}{% endcapture %}
                    {{ 'product-' | append: current | placeholder_svg_tag: 'placeholder-svg' }}
                  </span>
                </span>
<!--                 <p class="grid-link__title">{{ 'home_page.onboarding.product_title' | t }}</p>
                <p class="grid-link__meta">
                  <strong>$19.99</strong>
                </p> -->
            </div>
          {% endfor %}
        </div>
      </div>
    </div>
{% endif %}

<div id="EditModal" class="password-page__login-form1 text-center mfp-hide">
      
</div>

<div id="PreviewModal" class="password-page__login-form1 text-center mfp-hide">
      
</div>

{{ 'jQuery.serializeJSON.js' | asset_url | script_tag }}

<style>
  option[disabled]{
    background-color: #ccc;
  }
</style>

<script>
  
  var handler = '';
  var obj_this = '';
  var contentUpdated = '';
  
  $(document).ready(function(){
  	$('.js-toggle-edit-modal').magnificPopup({
        type: 'inline',
        mainClass: 'mfp-fade',
        closeOnBgClick: false,
        closeBtnInside: false,
        closeOnContentClick: false,
//         tClose: password.strings.pageClose,
        removalDelay: 500,
      	tLoading: '',
        callbacks: {
          open: function() {
//             window.setTimeout( function() { document.getElementById('password').focus(); }, 50 );
            	$('.mfp-preloader').addClass('w3-center').html('<i class="fa fa-refresh w3-spin"></i>').show();
            
          },
          close: function(){
//               if( contentUpdated ){ location.reload(); }
            	document.getElementById('EditModal').innerHTML = '';
//                 $('#EditModal').html('');  
          }
        }
      });
    
    $('.js-toggle-preview-modal').magnificPopup({
        type: 'iframe',
        mainClass: 'mfp-fade',
        closeOnBgClick: false,
        closeBtnInside: false,
        closeOnContentClick: false,
//         tClose: password.strings.pageClose,
        removalDelay: 500,
      	tLoading: '',
        callbacks: {
          open: function() {
//             window.setTimeout( function() { document.getElementById('password').focus(); }, 50 );
            
          },
          close: function(){
//               if( contentUpdated ){ location.reload(); }
          }
        }
      });
//       if ( $('.storefront-password-form .errors').size() ) {
//         $('.js-toggle-login-modal').click();
//       }
  });
  
  function contentChanged(id){ $('#edit-variant-frm-'+id+' input[type = "submit"]').removeAttr('disabled'); }
  
  function addToModal(obj){ 
    obj_this = window["current_edit_modal"] = obj;
//     $target = $(obj).parent().find('.modalContent'); console.log($target);
//   	$('EditModal').html($target);
    var $handler = $(obj).attr('handler'); //console.log($handler);
    $.ajax({
      url: '/products/'+$handler,
      type: 'GET',
      dataType: 'html',
      success: function(itemData) { 
        const regex = /(?=\<\!-- modalContent)[\w\W]+(?=modalContent -->)/g;

        let m;
        
        m = regex.exec(itemData);
        var res= m[0].replace('<!-- modalContent', '');
        
        //console.log(res);

        $('.mfp-preloader').hide();
        // document.getElementById('EditModal').innerHTML = res;
        $('#EditModal').empty().hide(0).append(res).fadeIn();
      }
    });
  }
  
  var cemail = "{{ customer.email }}";
  
  function reactClick(e, obj){ 
    e.preventDefault();
    e.stopPropagation();
    freez();
    var cemail = "{{ customer.email }}"

  	//alert('you clicked "'+$(obj).prop('id')+'" of form "'+$(obj).parent().prop('id')+'"');
    // var product_arry =  $(obj).prop('id').split("edit-variant-submit-");
    // product_id = product_arry[1];
    // data = $("#"+$(obj).parent().prop('id')).serializeArray(); 
    product_id = $(obj).attr('product_id');

    if($('#edit-variant-frm-'+product_id).find('[name$="][element]"]').length){
      if($('#edit-variant-frm-'+product_id).find('input[type="text"]').filter(function(){ return !Boolean(this.value); }).length){
        show_message2('Please fill empty fields.', false);
        return false;
      }
      url = "/apps/pepsi-print/product_configuration/create_product_variant";
      params = Object.values($(obj).serializeJSON().add); 
      data = { add: params, product_id: product_id, cemail: cemail, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}", cid: {{ customer.id }}, cregion: '{{ customer_region_tag }}' };
    }else{
      url = "/apps/pepsi-print/product_price/create_option";
      params = $(obj).not('[name^="add["]').serializeArray(); 
      data = { variant_info: params, product_id: product_id, cemail: cemail, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}", cid: {{ customer.id }}, cregion: '{{ customer_region_tag }}' };
    }
    
    console.log(JSON.stringify(data));
    $.ajax({type: "POST",
            url: url,
            data: data,
            success:function(result){
              // $("#statusMessage").html("Saved successfully.");
              // $("#statusMessage").addClass('successmsg');
              console.log(result);
              setTimeout(function(){
                $.unblockUI; show_message2('Saved Successfully', true);
                $('.mfp-preloader').addClass('w3-center').html('<i class="fa fa-refresh w3-spin"></i>').show();
                document.getElementById('EditModal').innerHTML = '';
                addToModal(obj_this);
                contentUpdated = true;
              }, 1000);
            },
            error: function () {
//               $('#statusMessage').html('Error occured while saving.');
//               $("#statusMessage").addClass('errormsg');
                $.unblockUI; show_message2('Error occured while saving', false);
   
            }
           });
            
//     var $handler = $(obj).attr('handler'); console.log($handler);
//     $.ajax({
//       url: '/products/'+$handler,
//       type: 'GET',
//       dataType: 'html',
//       success: function(itemData) { 
//         const regex = /(?=\<\!-- modalContent)[\w\W]+(?=modalContent -->)/g;

//         let m;
        
//         m = regex.exec(itemData);
//         var res= m[0].replace('<!-- modalContent', '');
        
//         console.log(res);

//         document.getElementById('EditModal').innerHTML = res;
//       }
//     });           
  }
</script>

{%- capture addElemTemplate -%}
<tr>
  <td>
    <button type="button" class="btn btn--small" onclick="remAddElement(this);" title="Remove"><i class="fa fa-times"></i></button>
  </td>
  <td>
    {% comment %}<input type="text" class="w3-margin-0" name="add[index][element]" placeholder="Enter Element Name">{% endcomment %}
    <select class="w3-margin-0" name="add[index][element]" id="" required="" onchange="checkElement(this);">
      <option value="" disabled selected>Select an Element*</option>
      --options--
    </select>
  </td>
  <td colspan="2">
    <input type="text" class="text-right w3-margin-0" name="add[index][price]" placeholder="Enter Default Price*" required="" onchange="this.value = Math.min(9999.00,Math.max(...[0.01,(parseFloat(this.value)||0.01)])).toFixed(2)">
  </td>
</tr>
{%- endcapture -%}

<script type="text/javascript">
  var cemail = "{{ customer.email }}"
  
var formSubmitting = true;
var setFormSubmitting = function() { formSubmitting = false; };

window.onload = function() {
    window.addEventListener("beforeunload", function (e) {
        if (formSubmitting) {
            return undefined;
        }
      
      	$(window).scrollTop(0);

        var confirmationMessage = 'It looks like you have been editing something. '
                                + 'If you leave before saving, your changes will be lost.';

        (e || window.event).returnValue = confirmationMessage; //Gecko + IE
        return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
    });
};
  
function msg(){
  try{ alert(''); }
  catch(e){msg();}
}
  
$('#bulk_action').bind('click', function(){
  freez();
  $.ajax({
    url: '/apps/pepsi-print/product_configuration/reload_collection',
    type: 'GET',
    data: {collection: "my_to_not", cemail: cemail, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}"},
    dataType: 'json',
    success: function(data){
           $.unblockUI(); 
           if(200 === Number(data.status)){
           	show_message2('Saved Successfully', true);  
           	formSubmitting = true;
           }
           else if(400 === Number(data.status))
           	show_message2(data.status, false);
    },
    error: function(){$.unblockUI(); show_message2('Opps!! Something Went Wrong', false); }
  });
});
  
$(".product-check").bind('change', function(){
  var $this = this;
  if ($this.checked){
    var bool = this.checked ? 1 : 0;
//     $.ajax({
//       url: '/apps/pepsi-print/product_configuration/'+this.value+'/create',
//       type: 'POST',
//       data: {product_id: this.value, cemail: cemail, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}" },
//       dataType: 'json'
//     });
  }
  else {
    freez();
    $.ajax({
      url: '/apps/pepsi-print/product_configuration/'+this.value+'/remove',
      type: 'POST',
      data: {product_id: this.value, cemail: cemail, ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}"},
      dataType: 'json',
      success: function(data){
             $.unblockUI(); 
             if(200 === Number(data.status)){
//                show_message2('Removed Successfully', true); 
               $($this).parent().parent().parent().parent().parent().delay(100).remove(); 
               setFormSubmitting(); $('#bulk_action').removeAttr("disabled"); 
               if( --product_count == 0){location.reload();} /*fadeOut('fast', function(){$(this).remove(500);});*/ 
             }else if(400 === Number(data.status))
                show_message2(data.status, false);
      },
      error: function(){$.unblockUI(); show_message2('Opps!! Something Went Wrong', false); }
    });
  }
});
  
function toggleFunc(variant_id, obj){
  if($(obj).is(':checked')){
    $(obj).attr('title', 'Uncheck to disable this variant.');
    $(variant_id).attr({'pattern':'^(?!0*(\\.0+)?$)(\\d+|\\d*\\.\\d{1,2})$', 'title':'Enter Non-zero price for enabled variant.'}).removeAttr('readonly').removeClass('disabled-input');
    $(variant_id).val($(obj).attr('default-value')).trigger('change');
    $('.add_element_btn').prop('disabled', false);
  }else{
    $(obj).attr('title', 'Check to enable this variant.');
    $(variant_id).attr('pattern', '^(\\d+((\\.)\\d{1,2})?)$').attr('readonly', 'readonly').addClass('disabled-input');
    $(variant_id).val('0.00').trigger('change');
    $('.add_element_btn').prop('disabled', true);
  }
}

function encodeImageFileAsURL(element) { freez(); 
      //single file read                                      
      var file = element.files[0];                                      
      element.value='';
      var reader = new FileReader();
      var imgCheck = true;
                                                    
      reader.onloadend = function() {
        // console.log('RESULT', reader.result);
                attachment = reader.result; //.split(',')[1];
                attachment = attachment.replace(' ', '');
                filename = file.name;
                extension = filename.toLowerCase().match(/\.([^\.]+)$/)[1];
                switch(extension)
                {
                    case 'png':
                    case 'jpg':
                    case 'jpeg':
                    case 'gif':
                    case 'svg':
                        // alert('allowed');
                      $('#imgFileTxt').val(filename);
                        break;
                    default:
                        show_message4('Unsupported image file type...',false,'Supported image type ".jpg" | ".jpeg" | ".png" | ".gif" | ".svg"');
                      imgCheck = false;
                }
                if(file.size/1024/1024 > 2 ){
                  show_message4('Invalid image file size...',false,'Try adding image of size < 2 MB');
                    imgCheck = false;
                }
                
                if(imgCheck){
                  filename = filename.replace(extension,'').replace(/[^A-Z0-9]+/ig, "_").replace(/^_+|_+$/g,'')+'_'+new Date().getTime()+'.'+extension;
                  putImgFile(filename, attachment, $(element).data('prodid'), $(element).data('imgid'), $(element).data('prod-img-id'));
                }
      }
              
      reader.readAsDataURL(file);
                                                
    }

    function putImgFile(filename, attachment, product_id, image_id, prod_img_id){
      data = { product_id: product_id, cid: "{{ customer.id }}", cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}",  image_id: image_id, image_base64_data: attachment, image_name: filename};
      console.log(data);
      $.ajax({
          url: '/apps/pepsi-print/product_configuration/upload_image_to_product.json',
          type: 'POST',
          data: JSON.stringify(data),
          dataType: 'json',
          contentType: 'application/json; charset=UTF-8',
          success: function(response){
                console.log(response);
                if(Boolean(data.image_id))
                  $('[data-image-id="'+data.image_id+'"]').hide(1).attr('src', response.src).fadeIn();
                else
                  addToModal(window.current_edit_modal);
                show_message4('Image uploaded successfully.',true);
          },
          error: function(){
            $.unblockUI; show_message4('Error in Image uploading.',false);
          }

      });
    }

    function getCustomer(pid, cid){
      data = { cemail: "{{ customer.email }}", ctoken: "{{ customer.id  | hmac_sha1: shop.domain }}", cid: cid, role: "{{ customer_role_tag | remove: "Role:" }}" };
      $.ajax({
        url: '/apps/pepsi-print/collection_response/get_customer.json',
            type: 'GET',
            data: data,
            dataType: 'json',
            success: function(data){
              console.log(data);
              $('#uploader_details_'+pid+' .name').text(data['customer_name']).attr({'title': data['customer_email'], 'href': ('mailto:'+data['customer_email'])});
            },
            error: function(data){
              console.log("error:", data);
            }
      });
    }

    function addElement(product_id, type, existing_elements, limit){
      window['product_id'] = product_id;
      window['this_limit'] = limit;
      var options = elements = '';
      existing_elements = existing_elements.split(',');
      if(type == "PTT")
        elements = elementTypePTT;
      else
        elements = elementTypePOS;

      $.when(
        $.each(elements, function(i, opt){ options = options+'<option value="'+opt+'" '+((existing_elements.indexOf(opt) != -1) ? 'disabled' : '' )+'>'+opt+'</option>' })
      ).done(function(){
        $('#edit-variant-frm-'+product_id).find('table tbody').append('{{ addElemTemplate | strip_newlines }}'.replace(/index/g, $('#edit-variant-frm-'+product_id).find('[name$="][element]"]').length.toString()).replace(/--options--/g, options));
        //console.log(options, elements, existing_elements);
        $('#edit-variant-frm-'+product_id).find('input[type="checkbox"]').prop('disabled', true);
        $('#edit-variant-frm-'+product_id).find('input[type="submit"]').prop('disabled', false);
        if($('#edit-variant-frm-'+window.product_id).find('[name$="][element]"]').length == window.this_limit){
          $('.add_element_btn').prop('disabled', true);
        }
      });
    }

    function remAddElement(obj){
      $(obj).parents('tr').remove();
      if($('#edit-variant-frm-'+window.product_id).find('[name$="][element]"]').length == 0)
        $('#edit-variant-frm-'+window.product_id).find('input[type="checkbox"]').prop('disabled', false);
      else if($('#edit-variant-frm-'+window.product_id).find('[name$="][element]"]').length < window.this_limit){
        $('.add_element_btn').prop('disabled', false);
      }
    }

    function checkElement(obj){
      if($('#edit-variant-frm-'+window.product_id).find('[name$="][element]"]').filter(function(){ return this.value == obj.value }).length > 1){
        $(obj).val("");
        show_message4('Element already selected.',false);
      }
    }

</script>

{% schema %}
  {
    "name": "My Products pages",
    "settings": [
      {
        "type": "checkbox",
        "id": "vendor_enable",
        "label": "Show product vendor"
      },
      {
        "type": "checkbox",
        "id": "show_sale_circle",
        "label": "Show product sale circle"
      },
      {
        "type": "checkbox",
        "id": "show_sold_out_circle",
        "label": "Show product sold out circle"
      },
      {
        "type": "checkbox",
        "id": "sort_enable",
        "label": "Enable collection sorting"
      },
      {
        "type": "checkbox",
        "id": "tags_enable",
        "label": "Enable filtering by product tag"
      },
      {
        "type": "checkbox",
        "id": "center_grid_link",
        "label": "Center text below product images"
      }
    ]
  }
{% endschema %}
