{% if customer  %}

  {% assign Role_User = 'general.Role.User' | t %}
  {% assign Role_Printer = 'general.Role.Printer' | t %}
  {% assign Role_Manager = 'general.Role.Manager' | t %}
  {% assign Role_ASM = 'general.Role.ASM' | t %}
  {% assign Role_Admin = 'general.Role.Admin' | t %}

  {% assign region_NorthEast = "general.Region_Tags.NorthEast" | t %}
  {% assign region_SouthEast = "general.Region_Tags.SouthEast" | t %}
  {% assign region_California = "general.Region_Tags.California" | t %}
  {% assign region_South = "general.Region_Tags.South" | t %}
  {% assign region_Mountain = "general.Region_Tags.Mountain" | t %}
  {% assign region_MidAtlantic = "general.Region_Tags.MidAtlantic" | t %}
  {% assign region_MidWest = "general.Region_Tags.MidWest" | t %}
  {% assign region_GreatLakes = "general.Region_Tags.GreatLakes" | t %}

  {% if customer.tags contains region_NorthEast %}
    {% assign customer_region_tag = region_NorthEast %}
  {% elsif customer.tags contains region_SouthEast %}
    {% assign customer_region_tag = region_SouthEast %}
  {% elsif customer.tags contains region_California %}
    {% assign customer_region_tag = region_California %}
  {% elsif customer.tags contains region_South %}
    {% assign customer_region_tag = region_South %}
  {% elsif customer.tags contains region_Mountain %}
    {% assign customer_region_tag = region_Mountain %}
  {% elsif customer.tags contains region_MidAtlantic %}
    {% assign customer_region_tag = region_MidAtlantic %}
  {% elsif customer.tags contains region_MidWest %}
    {% assign customer_region_tag = region_MidWest %}
  {% elsif customer.tags contains region_GreatLakes %}
    {% assign customer_region_tag = region_GreatLakes %}
  {% endif %}

  {% if customer and customer.tags contains Role_ASM %}
    {% assign collection_handle = customer_region_tag | remove: 'Region:' |replace:'0','o' | downcase | append: '-my-products' %}
  {% elsif customer.tags contains Role_User or customer.tags contains Role_Printer or customer.tags contains Role_Manager %}
    {% assign collection_handle = customer_region_tag | remove: 'Region:' |replace:'0','o' | downcase | append: '-products' %}
    {% assign non_asm = true %}
  {% endif %}

{% endif %}


{% comment %}

  This is your /cart template.

{% endcomment %}
<div id="CartSection" data-section-id="{{ section.id }}" data-section-type="cart-template" data-notes-enable="{{ section.settings.cart_notes_enable }}">
  {% if cart.item_count > 0 %}

    <form action="/cart" method="post" novalidate class="cart">

      <div class="section-header">
        <div class="grid">
          <div class="grid__item one-half medium-down--one-whole1">
            <h1 class="section-header__title">{{ 'cart.general.title' | t }}</h1>
          </div>
          <div class="grid__item one-half medium-down--one-whole1 text-right">
            <button type="button" class="btn--secondary" onclick="detectIE();">{{ 'cart.general.checkout' | t }}</button>
            <br><small class="note"><b>Note: </b>You will add quantities after you select locations during the checkout process.</small>
          </div>
        </div>
      </div>

      <div class="cart__row medium-down--hide cart__header-labels">
        <div class="grid--full">
          <div class="grid__item post-large--one-half push--post-large--one-half">
            <div class="grid--full">
              {% comment %}
              <div class="grid__item one-third medium-down--one-third">
                <span class="h4">{{ 'cart.label.price' | t }}</span>
              </div>
              
              
              <div class="grid__item one-whole medium-down--one-whole text-right">
                <span class="h4">{{ 'cart.label.quantity' | t }}</span>
              </div>
              
              
              <div class="grid__item one-third medium-down--one-third text-right">
                <span class="h4">{{ 'cart.label.total' | t }}</span>
              </div>
              {% endcomment %}
            </div>
          </div>
        </div>
      </div>

      {% comment %}
        Loop through products in the cart
      {% endcomment %}
      
      {% assign total_calculated_price_difference = 0 %}
      
      {% for item in cart.items %}
        <div class="cart__row">
          <div class="grid--full cart__row--table-large">

            <div class="grid__item post-large--one-half">
              <div class="grid">

                <div class="grid__item one-third">
                  <a href="/collections/{{ collection_handle }}{{ item.url }}" class="cart__image">

                    {% comment %}
                      More image size options at:
                        - http://docs.shopify.com/themes/filters/product-img-url
                    {% endcomment %}
                    <img src="{{ item | img_url: 'medium' }}" alt="{{ item.title | escape }}">
                  </a>
                </div>

                <div class="grid__item two-thirds">
                  <a href="/collections/{{ collection_handle }}{{ item.url }}" class="h5">
                    {{ item.product.title }}
                  </a>
                  {% unless item.variant.title contains 'Default' %}{% endunless %}
                    <br>
                    <small>{{ item.variant.title |remove:' / Default' |remove:' / Region:NorthEast' |remove:' / Region:SouthEast' |remove:' / Region:Mountain' |remove:' / Region:California' |remove:' / Region:MiidAtlantic' |remove:' / Region:MidWest'  |remove:' / Region:GreatLakes' |remove:customer_region_tag }}</small>
                  

                  {% comment %}
                    Optional, loop through custom product line items if available

                    For more info on line item properties, visit:
                      - http://docs.shopify.com/support/your-store/products/how-do-I-collect-additional-information-on-the-product-page-Like-for-a-monogram-engraving-or-customization
                  {% endcomment %}
                  {% assign propertySize = item.properties | size %}
                  {% if propertySize > 0 %}
                    {% for p in item.properties %}
                  
                      {% if p.first contains 'Unit Price' %}
                  		{% assign p_last = p.last | split:'$' | last %}
                  		{% assign item_price = item.price | money_without_currency | round: 2 %}
                  		{% assign total_calculated_price_difference = total_calculated_price_difference | plus: p_last | minus: item_price %} <script>console.log('gotcha: {{ p_last }}, {{ item_price }}, {{ total_calculated_price_difference }}');</script>
                      {% endif %}
                  
                      {% assign first_character_in_key = p.first | truncate: 1, '' %}
                      {% unless p.last == blank or first_character_in_key == '_' or p.first contains 'Parent ID' %}
                        <br>
                        {{ p.first }}:

                        {% comment %}
                          Check if there was an uploaded file associated
                        {% endcomment %}
                        {% if p.last contains '/uploads/' %}
                          <a href="{{ p.last }}">{{ p.last | split: '/' | last }}</a>
                        {% else %}
                          {{ p.last }}
                        {% endif %}

                      {% endunless %}
                    {% endfor %}
                  {% endif %}

                  <a href="/cart/change?line={{ forloop.index }}&amp;quantity=0" class="cart__remove">
                    <small>{{ 'cart.general.remove' | t }}</small>
                  </a>
                </div>

              </div>
            </div>

            <div class="grid__item post-large--one-half">
              <div class="grid--full cart__row--table-large">
				{% comment %}
                <div class="grid__item one-third">
                  <span class="cart__mini-labels">{{ 'cart.label.price' | t }}</span>
                  <span class="h5">{{ item.price | money }}</span>
                </div>
				
                
                <div class="grid__item one-whole text-right w3-right">
                  <label for="updates_{{ item.key }}" class="cart__mini-labels">{{ 'cart.label.quantity' | t }}</label>
                  <input style="margin-right:0;" type="number" readonly disabled class="cart__quantity-selector" name="updates[]" id="updates_{{ item.key }}" value="{{ item.quantity }}"  min="0" aria-label="{{ 'cart.label.quantity' | t }}">
                </div>
                
				
                <div class="grid__item one-third text-right">
                  <span class="cart__mini-labels">{{ 'cart.label.total' | t }}</span>
                  <span class="h5">
                    {% if item.original_line_price != item.line_price %}
                      <small class="cart-item__original-price"><s>{{ item.original_line_price | money }}</s></small>
                    {% endif %}
                    {{ item.line_price | money }}
                  </span>
                  {% if item.original_line_price != item.line_price %}
                    {% for discount in item.discounts %}
                      <small class="cart-item__discount">
                        {{ discount.title }}
                      </small>
                    {% endfor %}
                  {% endif %}
                </div>
				{% endcomment %}
              </div>
            </div>

          </div>
        </div>
      {% endfor %}

      <div class="cart__row">
        <div class="grid">
          {% comment %}
            Optional, add a textarea for special notes
              - Your theme settings can turn this on or off. Default is on.
              - Make sure you have name="note" for the message to be submitted properly
          {% endcomment %}
          {% if section.settings.cart_notes_enable %}
            {% assign noteSize = cart.note | size %}
            <div class="grid__item post-large--five-twelfths">
              <button type="button" class="text-link cart__note-add{% if noteSize > 0 %} is-hidden{% endif %}">
                {{ 'cart.label.add_note' | t }}
              </button>
              <div class="cart__note{% if noteSize > 0 %} is-active{% endif %}">
                <label for="CartSpecialInstructions">{{ 'cart.general.note' | t }}</label>
                <textarea name="note" class="input-full" id="CartSpecialInstructions">{{ cart.note }}</textarea>
              </div>
            </div>
          {% endif %}
          <div class="grid__item text-right{% if section.settings.cart_notes_enable %} post-large--seven-twelfths{% endif %}">
            <p>
              <span class="cart__subtotal-title">{{ 'cart.general.subtotal' | t }}</span>
              <script>console.log('tcpd','{{ total_calculated_price_difference }}');</script>
              <span class="h5 cart__subtotal">
                {% capture total_price %}${{ cart.total_price | money_without_currency | plus:total_calculated_price_difference | round: 2 }}{% endcapture %}
                {% if total_price contains '.' %}
                	{% assign tp_decimal_part = total_price | split:'.' | last %}
                	{% if tp_decimal_part.size < 3 %}
                      {% assign total_price = total_price | append:'0' %}
                	{% endif %}
                {% else %}
                	{% assign total_price = total_price | append:'.00' %}
                {% endif %}
                {{ total_price }}
              </span>
              {% if cart.total_discounts > 0 and false %}
                {% assign savings = cart.total_discounts | money %}
                <small class="cart-subtotal__savings">{{ 'cart.general.savings_html' | t: price: savings }}</small>
              {% endif %}
            </p>
            <p><em>{{ 'cart.general.shipping_at_checkout' | t }}</em></p>

            {% comment %}
              Continue shopping button
            {% endcomment %}
            <a class="btn--secondary" href="/pages/catalog">{{ 'cart.general.continue_shopping' | t }}</a>
            
			{% comment %}
            <button type="submit" name="update" class="btn--secondary update-cart">{{ 'cart.general.update' | t }}</button>
            <button type="submit" name="checkout" class="btn">{{ 'cart.general.checkout' | t }}</button>
            {% endcomment %}
            <button type="button" class="btn--secondary" onclick="detectIE();">{{ 'cart.general.checkout' | t }}</button>
            {% if additional_checkout_buttons %}
              <div class="cart__additional_checkout">{{ content_for_additional_checkout_buttons }}</div>
            {% endif %}
            <br><small class="note"><b>Note: </b>You will add quantities after you select locations during the checkout process.</small>
          </div>
        </div>

      </div>

    </form>

  {% else %}
    {% comment %}
      The cart is empty
    {% endcomment %}
    <h2>{{ 'cart.general.title' | t }}</h2>
    <p>{{ 'cart.general.empty' | t }}</p>
    <p>{{ 'cart.general.continue_browsing_html' | t }}</p>
  {% endif %}
</div>

{% schema %}
  {
    "name": "Cart page",
    "settings": [
      {
        "type": "checkbox",
        "id": "cart_notes_enable",
        "label": "Enable order notes"
      }
    ]
  }
{% endschema %}

<script>
  function detectIE(){
    {% comment %} 
//     var ua = window.navigator.userAgent;

//     var msie = ua.indexOf('MSIE ');
//     if (msie > 0) {
//       console.log('its IE');
//       if(confirm('for compatibility purposes please ensure you are utilizing\nChrome OR Safari')== true);
//        window.location.assign('/pages/locations');
//     }else
//       window.location.assign('/pages/locations');
    {% endcomment %}
    if(isIE()){
      alert('Unsupported Browser Alert!\n\n{{ 'general.Unsupported_Browser_Msg' | t }}');
      	window.location.assign('/pages/locations');
    }else
      window.location.assign('/pages/locations');
  }
  
  function isIE() {
      var ua = window.navigator.userAgent;

      var msie = ua.indexOf('MSIE ');
      if (msie > 0) {
        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);
      }

      var trident = ua.indexOf('Trident/');
      if (trident > 0) {
        var rv = ua.indexOf('rv:');
        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);
      }
      return false;
    }
  
    {% for line_item in cart.items %}
      {% assign per_line_price = line_item.price | money_without_currency %}
        {% for property in line_item.properties %}
          console.log('property', '{{ property }}');
        {% endfor %}
    {% endfor %}  
</script>