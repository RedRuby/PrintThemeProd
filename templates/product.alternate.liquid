{% layout 'theme.alternate' %}

{% include 'customer-account-common-code' with 'theme-layout-code' %}

{% if product.type  == 'SHOPSTORM_HIDDEN_PRODUCT' %}
  Product is not available
  {% break %}
{% endif %}

{% comment %}
  The contents of the product.liquid template can be found in /sections/product-template.liquid
{% endcomment %}

<!-- psudoContent -->
{% if fs_shop_active %}
  {% section 'product-template-fs' %}
{% else %}
  {% section 'product-template' %}
{% endif %}
<!-- psudoContent -->

<script>
  // Override default values of shop.strings for each template.
  // Alternate product templates can change values of
  // add to cart button, sold out, and unavailable states here.
  theme.productStrings = {
    addToCart: {{ 'products.product.add_to_cart' | t | json }},
    soldOut: {{ 'products.product.sold_out' | t | json }},
    unavailable: {{ 'products.product.unavailable' | t | json }}
  }
  
  {% if cart.item_count > 0 %}
  var cart_json = {{ cart | json }};
  
  function getParameterByName(name) {
      var url = window.location.href;
      name = name.replace(/[\[\]]/g, "\\$&");
      var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
      if (!results) return null;
      if (!results[2]) return '';
      return decodeURIComponent(results[2].replace(/\+/g, " "));
  }
  
  function shorten(s, max) {
    return s.length > max ? s.substring(0, (max / 2) - 1) + '...' + s.substring(s.length - (max / 2) + 2, s.length) : s
  }
  
  $(document).ready(function(){ 
      line = getParameterByName('line'); 
      
      if(line){
        item_prop = cart_json.items[line].properties;
        $.each(item_prop, function(key,value) {
            el = $('[name="properties['+key+']"]');
            if( el.is('input[type="text"]') || el.is('textarea') ){ 
              el.val(value).show();
            }
          	else if( el.is('input[type="file"]') ){ 
              el.attr({'type':'text', 'title':value}).val(shorten(value, el.width()/7)).show();
            }
            else if(  el.is('input[type="radio"]') ||  el.is('input[type="checkbox"]') ){
              el.filter('[value="'+value+'"]').prop('checked', 'checked').show();
            }
            else if(  el.is('select') ){
              el.find('option[value="'+value+'"]').prop('selected', 'selected').trigger('change').show();
            }
        });
        $('#AddToCartForm [name^="properties["], .product-single__variants1').prop({'readonly':'readonly', 'disabled': 'disabled'});
      }
  });
  {% endif %}
  
</script>

<style>
    header, footer, .header-bar, .breadcrumb, #ProductSection .section-header, #ProductSection .grid-link__container, #chatra, #AddToCart2 { display:none !important; }
</style>
